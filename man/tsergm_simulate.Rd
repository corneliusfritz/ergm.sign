% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsergm.R
\name{tsergm_simulate}
\alias{tsergm_simulate}
\title{Draw from the distribution of an Signed Exponential Family Random Graph Model}
\usage{
tsergm_simulate(formula, coef, only_stats = T, sampler = NULL, cluster = NULL)
}
\arguments{
\item{formula}{A \code{\link{formula}}, which should be of the form
\code{y ~ <model terms>}, where \code{y} is a numeric matrix of signed entries 0, -1, and 1.  
For the details on the possible \code{<model terms>}, see \code{\link{sergm.terms}}.}

\item{coef}{Vector of parameter values for the model from which the
sample is to be drawn.}

\item{only_stats}{Boolean value indicating if only the matrix of the specified statistics should be returned. 
Otherwise, the function will also return the sampled networks represented as two lists 
including all negative and positives edges. This list can be transformed back to a matrix with the function \code{\link{map_to_mat}}.}

\item{sampler}{An \code{\link{sampler.sergm}} object to detail how the networks are drawn, see the
documentation of \code{\link{sampler.sergm}} what the options are.}

\item{cluster}{A PSOCK or Fork cluster generated with \code{\link{makeCluster}} from the package \code{\link{parallel}}.}
}
\value{
Depending on the parameter \code{only_stats}, either a list including the sampled networks 
and a matrix of their sufficient statistics or a list only including the matrix of sufficient statistics is returned.  
Each network is represented as a list of two lists. One list for the negative edges and one for the positive edges. 
This list can be transformed back to a matrix with the function \code{\link{map_to_mat}}.
}
\description{
\code{sergm_simulate} is used to draw from exponential
family random network models for signed networks.  See \code{\link{sergm}} for more
information on these models. 
A sample of networks is randomly drawn from the specified model.  The model
is specified by the first argument of the function through a \code{\link{formula}}.
}
\details{
Note that the first network is sampled after \code{burnin} steps,
and any subsequent networks are sampled each \code{interval} steps
after the first.
}
